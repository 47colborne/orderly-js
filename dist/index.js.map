{"version":3,"file":"index.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b5f2c3db2f5434cdc28d","webpack:///src/index.js","webpack:///src/orderly/index.js","webpack:///src/orderly/debug.js","webpack:///src/orderly/ajax/index.js","webpack:///src/orderly/ajax/callbacks.js","webpack:///src/orderly/ajax/content_type.js","webpack:///src/orderly/ajax/url.js","webpack:///src/orderly/ajax/version.js","webpack:///src/orderly/job.js","webpack:///src/orderly/queue.js","webpack:///node_modules/fastpriorityqueue/FastPriorityQueue.js","webpack:///node_modules/webpack/buildin/module.js","webpack:///src/orderly/worker.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Orderly\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Orderly\"] = factory();\n\telse\n\t\troot[\"Orderly\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b5f2c3db2f5434cdc28d\n **/","module.exports = require('./orderly')\n\n\n\n/** WEBPACK FOOTER **\n ** src/index.js\n **/","import { setMode } from './debug'\n\nimport Ajax from './ajax'\nimport Job from './job'\nimport Queue from './queue'\nimport Worker from './worker'\n\nclass Orderly {\n\n  // ============================================\n  // SET DEBUG MODE\n  // ============================================\n\n  static debugMode = function(bool) {\n    setMode(bool)\n    return this\n  }\n\n  // ============================================\n  // CLASS SHARED VERIABLES\n  // ============================================\n\n  static queue = undefined\n\n  static worker = undefined\n\n  static global = undefined\n\n  // ============================================\n  // CLASS FUNCTIONS\n  // ============================================\n\n  static start = function({ max, sleep } = {}) {\n    if (!this.worker) {\n      this.queue = new Queue\n      this.worker = new Worker(this.queue, { max, sleep })\n      this.default = new Orderly()\n    }\n\n    this.worker.start()\n\n    return this.default\n  }\n\n  static pause = function() {\n    if (this.worker) this.worker.stop()\n  }\n\n  static stop = function() {\n    this.pause()\n    this.queue = this.worker = this.default = undefined\n  }\n\n  // ============================================\n  // PUBLIC INTERFACE\n  // ============================================\n\n  constructor(options = {}) {\n    this.options = options\n  }\n\n  withOptions({ as, ...options } = {}) {\n    return new Orderly(Object.assign({}, this.options, options))\n  }\n\n  ajax(url, options = {}) {\n    let req = new Ajax(url, Object.assign({}, this.options, options))\n    let job = new Job({ action: req.execute, priority: options.priority })\n\n    Orderly.queue.add(job)\n\n    return req\n  }\n\n  get(url, options = {}) {\n    return this.ajax(url, Object.assign(options, { method: 'GET' }))\n  }\n\n  post(url, options = {}) {\n    return this.ajax(url, Object.assign(options, { method: 'POST' }))\n  }\n\n  put(url, options = {}) {\n    return this.ajax(url, Object.assign(options, { method: 'PUT' }))\n  }\n\n  del(url, options = {}) {\n    return this.ajax(url, Object.assign(options, { method: 'DELETE' }))\n  }\n}\n\nexport default Orderly\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/index.js\n **/","let mode = false\n\nfunction setMode(boolean) {\n  return mode = boolean\n}\n\nfunction getMode() {\n  return mode\n}\n\nfunction log(klass, action, args = {}) {\n  if (mode) {\n    let msg = Object.keys(args).reduce((msg, key) => {\n      let value = args[key]\n      if (typeof value === 'object') value = JSON.stringify(value)\n      return `${ msg } ${ key }:${ value }`\n    }, klass)\n\n    msg = msg + ' ' + action\n\n    console.log(msg)\n  }\n}\n\nexport { setMode, getMode, log }\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/debug.js\n **/","import { onSuccess, onFail, proxy } from './callbacks'\nimport { parseResponse, requestContentType } from './content_type'\nimport { filterParams } from './url'\nimport { log } from '../debug'\n\nimport Version from './version'\n\nconst STATUS_KEY = 'statusText'\nconst STATUS_SKIP = 'skipped'\nconst STATUS_CANCEL = 'cancelled'\nconst VERSION_KEY = 'version'\n\nfunction debugLogger(action, version, priority) {\n  log('Ajax', action, { url: version.key, id: version.id, priority })\n}\n\nfunction buildResponse(status, version) {\n  return {\n    [STATUS_KEY]: status,\n    [VERSION_KEY]: version,\n    skipped: STATUS_SKIP === status,\n    cancelled: STATUS_CANCEL === status\n  }\n}\n\nfunction anyConditionMet(conditions, ...args) {\n  return conditions.some(condition => condition(...args))\n}\n\nfunction shouldSkip(skip, conditions, version) {\n  return skip !== false && (anyConditionMet(conditions) || version.sentIsOutdated())\n}\n\nfunction shouldCancel(resp, conditions, version, priority) {\n  if (anyConditionMet(conditions, resp) || version.receivedIsOutdated()) {\n    debugLogger('CANCELLED', version, priority)\n    throw(buildResponse(STATUS_CANCEL, version))\n  } else {\n    debugLogger('RECEIVED', version, priority)\n  }\n}\n\nfunction appendVersion(resp, value) {\n  resp[VERSION_KEY] = value\n}\n\nfunction initHeader(headers = {}, body, type) {\n  return Object.assign(headers, requestContentType(body, type))\n}\n\nfunction initBody(body, type) {\n  return body && (typeof body === 'object' || type === 'json') ? JSON.stringify(body) : body\n}\n\nfunction initRequest(url, { headers, body, type, ...options }) {\n  options.headers = initHeader(headers, body, type)\n  options.body = initBody(body, type)\n  return options\n}\n\nfunction initAction(url, request, version, { type, priority, skip }) {\n  return function(conditions) {\n    if (shouldSkip(skip, conditions, version)) {\n      debugLogger('SKIPPED', version, priority)\n      return Promise.reject(buildResponse(STATUS_SKIP, version))\n    }\n\n    version.sent()\n    debugLogger('SENT', version, priority)\n\n    return fetch(url, request)\n      .then(proxy(shouldCancel, conditions, version, priority))\n      .then(proxy(version.received))\n      .then(proxy(appendVersion, version))\n      .then(parseResponse(type))\n  }\n}\n\nclass Ajax {\n  constructor(url, { version, ...options } = {}) {\n    // create new version for this request\n    version = new Version(filterParams(url), version)\n\n    // build request object\n    let request = initRequest(url, options)\n\n    // build action function\n    let action = initAction(url, request, version, options)\n\n    // initialize conditions used by skipping or cancelling request\n    this.conditions = []\n\n    // initialize the request promise\n    this.q = new Promise((resolve, reject) => {\n\n      // build execute function, invoke sometimes later by Worker\n      this.execute = () => {\n\n        // trigger the action with the conditions passed in\n        // action must returns an promise\n        return action(this.conditions)\n          .then(this.__done__)\n          .then(resolve)\n          .catch(reject)\n          .then(this.__cleanup__)\n      }\n    })\n\n    debugLogger('CREATED', version, options.priority)\n  }\n\n  // Resolve with a new promise to dispose the previouse promise\n  __done__ = (resp) => {\n    return this.q = Promise.resolve(resp)\n  }\n\n  // clean up after the request\n  __cleanup__ = () => {\n    this.execute = this.conditions = undefined\n  }\n\n  // add cancel conditions\n  cancel(callback) {\n    this.conditions.push(callback)\n    return this\n  }\n\n  // proxy through the promise catch clause\n  catch(callback) {\n    this.q = this.q.catch(callback)\n    return this\n  }\n\n  // invoking callback only when response status is 400 and above\n  fail(callback) {\n    return this.then(onFail(callback))\n  }\n\n  // invoking callback only when response status is less than 400\n  success(callback) {\n    return this.then(onSuccess(callback))\n  }\n\n  // reuglar then chaining clause\n  then(callback) {\n    this.q = this.q.then(callback)\n    return this\n  }\n}\n\nexport default Ajax\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/ajax/index.js\n **/","function proxy(callback, ...args) {\n  return function(resp) {\n    callback(resp, ...args)\n    return resp\n  }\n}\n\nfunction conditionalProxy(callback, condition) {\n  return function(resp) {\n    if (condition(resp)) callback(resp)\n    return resp\n  }\n}\n\nfunction onFail(callback) {\n  return conditionalProxy(callback, resp => resp && resp.status >= 400)\n}\n\nfunction onSuccess(callback) {\n  return conditionalProxy(callback, resp => resp && resp.status < 400)\n}\n\nexport { proxy, conditionalProxy, onFail, onSuccess }\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/ajax/callbacks.js\n **/","\nconst MIME_TYPES = {\n  json: 'application/json'\n}\n\nfunction bodyContainsJson(resp) {\n  let ct = resp.headers.get('Content-Type')\n  return ct && ct.includes(MIME_TYPES.json)\n}\n\nfunction includeData(resp) {\n  return function(data) {\n    resp['data'] = data\n    return resp\n  }\n}\n\nfunction includeType(type) {\n  return function(resp) {\n    if (!type)\n      type = bodyContainsJson(resp) ? 'json' : 'text'\n\n    resp['orderly_type'] = type\n    return resp\n  }\n}\n\nfunction convertType(resp) {\n  return resp[resp.orderly_type]()\n}\n\nfunction parseResponse(type) {\n  return function(resp) {\n    return Promise.resolve(resp)\n      .then(includeType(type))\n      .then(convertType)\n      .then(includeData(resp))\n  }\n}\n\nfunction accepts(type) {\n  if (type === 'json') return { 'Accept': MIME_TYPES.json }\n}\n\nfunction contentType(body, type) {\n  if (type === 'json' || (typeof body === 'object'))\n    return { 'Content-Type': MIME_TYPES.json }\n}\n\nfunction requestContentType(body, type) {\n  return Object.assign({}, accepts(type), contentType(body, type))\n}\n\nexport { parseResponse, requestContentType }\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/ajax/content_type.js\n **/","const PARAMS_FORMAT = new RegExp(/\\?.*$/);\n\nfunction filterParams(url) {\n  return url.split('?')[0]\n}\n\nexport { filterParams }\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/ajax/url.js\n **/","function initValue() {\n  return { counter: 0, sent: 0, received: 0 }\n}\n\nclass Version {\n\n  static map = {}\n\n  static get = function(key) {\n    return this.map[key] || (this.map[key] = initValue())\n  }\n\n  static inc = function(key) {\n    return this.get(key).counter += 1\n  }\n\n  constructor(key, check = true) {\n    this.check = check\n    this.key = key\n    this.id = Version.inc(key)\n  }\n\n  sentIsOutdated = () => {\n    return this.check && Version.get(this.key)['sent'] > this.id\n  }\n\n  receivedIsOutdated = () => {\n    return this.check && Version.get(this.key)['received'] > this.id\n  }\n\n  sent = () => {\n    let versionForKey = Version.get(this.key)\n    if (this.id > versionForKey.sent) {\n      return versionForKey.sent = this.id\n    }\n  }\n\n  received = () => {\n    let versionForKey = Version.get(this.key)\n    if (this.id > versionForKey.received) {\n      return versionForKey.received = this.id\n    }\n  }\n}\n\nexport default Version\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/ajax/version.js\n **/","class Job {\n  constructor({ action, priority = 0, ...options } = {}) {\n    this.action = action\n    this.priority = priority\n    this.options = options\n  }\n\n  execute = (callback) => {\n    let r = this.action()\n\n    if (callback && typeof callback === 'function') {\n      if ((r && r instanceof Promise)) {\n        r.then(callback)\n      } else {\n        callback(r)\n      }\n    }\n\n    return r\n  }\n}\n\nexport default Job\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/job.js\n **/","import FastPriorityQueue from 'fastpriorityqueue'\nimport { log } from './debug'\n\nfunction defaultStrategy(\n  { priority: p1 = 0, queueId: qId1 },\n  { priority: p2 = 0, queueId: qId2 }\n) {\n\n  return (p1 === p2 && qId2 > qId1) || (p2 < p1)\n}\n\nclass Queue {\n  static counter = 0\n\n  static inc = function() {\n    return this.counter += 1\n  }\n\n  constructor({ strategy = defaultStrategy } = {}) {\n    this.queue = new FastPriorityQueue(strategy)\n  }\n\n  add(obj) {\n    if (typeof obj === 'object' && typeof obj.execute === 'function') {\n      obj.queueId = Queue.inc()\n      this.queue.add(obj)\n      return obj\n    } else {\n      throw new Error('trying to insert an invalid job', obj)\n    }\n  }\n\n  get() {\n    log('Queue', 'getting a job', { size: this.size() })\n    return this.queue.poll()\n  }\n\n  isEmpty() {\n    return this.queue.isEmpty()\n  }\n\n  size() {\n    return this.queue.size\n  }\n\n  cleanup() {\n    return this.queue.trim()\n  }\n}\n\nexport default Queue\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/queue.js\n **/","/**\n * FastPriorityQueue.js : a fast heap-based priority queue  in JavaScript.\n * (c) the authors\n * Licensed under the Apache License, Version 2.0.\n *\n * Speed-optimized heap-based priority queue for modern browsers and JavaScript engines.\n *\n * Usage :\n         Installation (in shell, if you use node):\n         $ npm install fastpriorityqueue\n\n         Running test program (in JavaScript):\n\n         // var FastPriorityQueue = require(\"fastpriorityqueue\");// in node\n         var x = new FastPriorityQueue();\n         x.add(1);\n         x.add(0);\n         x.add(5);\n         x.add(4);\n         x.add(3);\n         x.peek(); // should return 0, leaves x unchanged\n         x.size; // should return 5, leaves x unchanged\n         while(!x.isEmpty()) {\n           console.log(x.poll());\n         } // will print 0 1 3 4 5\n         x.trim(); // (optional) optimizes memory usage\n */\n'use strict';\n\nvar defaultcomparator = function(a, b) {\n    return a < b;\n};\n\n// the provided comparator function should take a, b and return *true* when a < b\nfunction FastPriorityQueue(comparator) {\n    this.array = [];\n    this.size = 0;\n    this.compare =  comparator || defaultcomparator;\n}\n\n\n// Add an element the the queue\n// runs in O(log n) time\nFastPriorityQueue.prototype.add = function(myval) {\n    var i = this.size;\n    this.array[this.size++] = myval;\n    while ( i > 0) {\n        var p = (i - 1) >> 1;\n        var ap = this.array[p];\n        if(!this.compare(myval, ap )) break;\n        this.array[i] = ap;\n        i = p;\n    }\n    this.array[i] = myval;\n};\n\n// replace the content of the heap by provided array and \"heapifies it\"\nFastPriorityQueue.prototype.heapify = function(arr) {\n    this.array = arr;\n    this.size = arr.length;\n    for (var i = (this.size >> 1); i >= 0; i--) {\n        this._percolateDown(i);\n    }\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateUp = function(i) {\n    var myval = this.array[i];\n    while ( i > 0) {\n        var p = (i - 1) >> 1;\n        var ap = this.array[p];\n        if(!this.compare(myval, ap )) break;\n        this.array[i] = ap;\n        i = p;\n    }\n    this.array[i] = myval;\n};\n\n\n// for internal use\nFastPriorityQueue.prototype._percolateDown = function(i) {\n    var size = this.size;\n    var hsize = this.size >>> 1;\n    var ai = this.array[i];\n    while (i < hsize) {\n        var l = (i << 1) + 1;\n        var r = l + 1;\n        var bestc = this.array[l];\n        if (r < size) {\n            if (this.compare(this.array[r], bestc)) {\n                l = r;\n                bestc = this.array[r];\n            }\n        }\n        if (!this.compare(bestc,ai)) {\n          break;\n        }\n        this.array[i] = bestc;\n        i = l;\n    }\n    this.array[i] = ai;\n};\n\n// Look at the top of the queue (a smallest element)\n// executes in constant time\n//\n// This function assumes that the priority queue is\n// not empty and the caller is resposible for the check. \n// You can use an expression such as\n// \"isEmpty() ? undefined : peek()\"\n// if you expect to be calling peek on an empty priority queue.\n// \nFastPriorityQueue.prototype.peek = function(t) {\n    return this.array[0];\n};\n\n// remove the element on top of the heap (a smallest element)\n// runs in logarithmic time\n//\n//\n// This function assumes that the priority queue is\n// not empty, and the caller is responsible for the check. \n// You can use an expression such as\n// \"isEmpty() ? undefined : poll()\"\n// if you expect to be calling poll on an empty priority queue.\n//\n// For long-running and large priority queues, or priority queues\n// storing large objects, you may  want to call the trim function\n// at strategic times to recover allocated memory.\nFastPriorityQueue.prototype.poll = function(i) {\n    var ans = this.array[0];\n    if(this.size>1) {\n        this.array[0] = this.array[--this.size];\n        this._percolateDown(0 | 0);\n    } else --this.size;\n    return ans;\n};\n\n\n// recover unused memory (for long-running priority queues)\nFastPriorityQueue.prototype.trim = function() {\n    this.array = this.array.slice(0,this.size);\n};\n\n// Check whether the heap is empty\nFastPriorityQueue.prototype.isEmpty = function(i) {\n    return this.size == 0;\n};\n\n// just for illustration purposes\nvar main = function() {\n    // main code\n    var x = new FastPriorityQueue(function(a, b) {\n        return a < b;\n    });\n    x.add(1);\n    x.add(0);\n    x.add(5);\n    x.add(4);\n    x.add(3);\n    while (!x.isEmpty()) {\n        console.log(x.poll());\n    }\n};\n\nif (require.main === module) {\n    main();\n}\n\nmodule.exports = FastPriorityQueue;\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/fastpriorityqueue/FastPriorityQueue.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/webpack/buildin/module.js\n **/","function isFree(pending, max) {\n  return pending <= max\n}\n\nfunction hasJob(queue) {\n  return !queue.isEmpty()\n}\n\nfunction dispatch(func, ...args) {\n  return setTimeout(func, 0, ...args)\n}\n\nclass Worker {\n  constructor(queue, { sleep = 50, max = 8 } = {}) {\n    this.queue = queue\n    this.sleep = sleep\n    this.max = max\n\n    this.pending = 0\n    this.continue = true\n  }\n\n  start = () => {\n    while (isFree(this.pending, this.max) && hasJob(this.queue)) {\n      this.pending += 1\n      let job = this.queue.get()\n\n      dispatch(job.execute, this.complete)\n    }\n\n    this.queue.cleanup()\n\n    if (this.continue)\n      this.setTimeout = setTimeout(this.start, this.sleep)\n  }\n\n  stop() {\n    this.continue = false\n    clearTimeout(this.setTimeout)\n  }\n\n  complete = () => {\n    this.pending -= 1\n  }\n}\n\nexport default Worker\n\n\n\n/** WEBPACK FOOTER **\n ** src/orderly/worker.js\n **/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AACA;AACA;AA6CA;AACA;AACA;AACA;AAtCA;AACA;AACA;AACA;AAoCA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAhCA;AACA;AACA;AACA;AAtBA;AACA;AACA;AACA;;;AAiDA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;;;;;;AAjFA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAyBA;AACA;AADA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AAxCA;AA0CA;AACA;AACA;AACA;AAuCA;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACxBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAkCA;AACA;AACA;AApCA;AAuCA;AACA;AACA;AAxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACrBA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAYA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjBA;AACA;AADA;AAKA;AACA;AACA;AAPA;AASA;AACA;AACA;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AACA;AACA;AACA;AAgBA;;;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;;;;;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AApCA;AACA;AADA;AAIA;AACA;AACA;AAiCA;;;;;;AClDA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAtBA;AA6BA;AACA;AACA;AA9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAeA;AACA;AACA;AACA;;;;;;AAOA;;;;;","sourceRoot":""}